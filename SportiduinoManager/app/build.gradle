import com.github.spotbugs.snom.SpotBugsTask

plugins {
    id "checkstyle"
    id "pmd"
    id "com.github.spotbugs" version "6.1.13"
}
apply plugin: 'com.android.application'

android {
    compileSdk 36

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }

    signingConfigs {
        release {
            storeFile file(SPORTIDUINO_STORE_FILE)
            storePassword SPORTIDUINO_STORE_PASSWORD
            keyAlias SPORTIDUINO_KEY_ALIAS
            keyPassword SPORTIDUINO_KEY_PASSWORD
        }
    }

    defaultConfig {
        applicationId "ru.mmb.sportiduinomanager"
        minSdkVersion 21
        targetSdkVersion 36
        resourceConfigurations += ['ru', 'en']
    }

    bundle {
        language {
            // Specifies that the app bundle should not support
            // configuration APKs for language resources. These
            // resources are instead packaged with each base and
            // dynamic feature APK.
            enableSplit = false
        }
    }

    buildTypes {
        debug {
            minifyEnabled false
            applicationIdSuffix '.debug'
            versionNameSuffix '.debug'
        }
        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt')
        }
    }
    namespace 'ru.mmb.sportiduinomanager'
    buildFeatures {
        buildConfig true
    }
    lint {
        disable 'UsingOnClickInXml'
    }
}

checkstyle {
    toolVersion "10.25.0"
    configFile file("${project.rootDir}/config/checkstyle/checkstyle.xml")
}
tasks.register('checkstyle', Checkstyle) {
    group 'verification'
    source 'src'
    include '**/*.java'
    classpath = files()
}
check.dependsOn('checkstyle')

pmd {
    toolVersion "7.14.0"
    ruleSets = []
    ruleSetFiles = files("$project.rootDir/config/pmd/rules-pmd.xml")
}
tasks.register('pmd', Pmd) {
    group 'verification'
    source 'src'
    include '**/*.java'
}
check.dependsOn('pmd')

spotbugs {
    toolVersion = '4.9.3'
    excludeFilter = file("$project.rootDir/config/spotbugs/spotbugs-exclude.xml")
    reportsDir = file("$project.rootDir/app/build/reports/spotbugs/")
}
tasks.withType(SpotBugsTask).configureEach {
    reports {
        xml {
            required.set(true)
        }
        html {
            required.set(true)
        }
    }
}

dependencies {
    implementation 'androidx.appcompat:appcompat:1.7.1'
    implementation 'androidx.localbroadcastmanager:localbroadcastmanager:1.1.0'
    implementation 'com.google.android.material:material:1.13.0-beta01'
    implementation 'androidx.constraintlayout:constraintlayout:2.2.1'

    spotbugsPlugins 'com.h3xstream.findsecbugs:findsecbugs-plugin:1.14.0'

    final def acraVersion = '5.12.0'
    implementation "ch.acra:acra-core:$acraVersion"
    implementation "ch.acra:acra-http:$acraVersion"
    implementation "ch.acra:acra-toast:$acraVersion"
}
repositories {
    mavenCentral()
}